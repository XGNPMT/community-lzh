<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <insert id="insertMessage" keyProperty="id">
        insert into message(from_id,to_id,conversation_id,content,create_time,status)
        values(#{fromId},#{toId},#{conversationId},#{content},#{createTime},#{status})
    </insert>
    <update id="updateStatus">
        update message set status=#{status} where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="selectConversation" resultType="com.nowcoder.community.entity.Message">
        select * from message where id in
            (
                select MAX(id) from message where
                status!=2 and
                from_id!=1 and
                (to_id=#{userId} or from_id =#{userId})
                group by conversation_id
            )
        order by id desc
        limit #{offSet},#{limit}

    </select>

    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select * from message where conversation_id=#{conversationId}
        and status!=2
        and from_id!=1
        order by create_time desc
        limit #{offSet},#{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(0) from message where id in
            (
                select MAX(id) from message where
                status!=2 and
                from_id!=1 and
                (to_id=#{userId} or from_id =#{userId})
                group by conversation_id
            )
    </select>
    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(0) from message where conversation_id=#{conversationId}
                                and status!=2
                                and from_id!=1
    </select>
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(0) from message where from_id!=1 and to_id=#{userId} and status=0
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>
    </select>
    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
    select from_id, to_id, conversation_id, content, status, create_time from message where id in
        (select MAX(id) from message where
            status!=2 and
            conversation_id=#{topic} and
            from_id = 1 and
            to_id = #{userId})
    </select>
    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(*) from message where
            status!=2 and
            conversation_id=#{topic} and
            from_id = 1 and
            to_id = #{userId}
    </select>
    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(*) from message where
            status=0 and
            from_id = 1 and
            to_id = #{userId}
            <if test="topic!=null">
                and conversation_id=#{topic}
            </if>
    </select>
    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">
            select * from message where
                status!=2 and
                from_id = 1 and
                to_id = #{userId} and
                conversation_id=#{topic}
            order by create_time desc
            limit #{offSet} , #{limit}
    </select>

</mapper>